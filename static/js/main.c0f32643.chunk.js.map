{"version":3,"sources":["components/emptyList.js","components/taskInfo.js","components/todoList.js","components/modal.js","components/todo.js","App.js","serviceWorker.js","index.js"],"names":["EmptyList","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","TaskInfo","_this","state","openInfo","infoObj","category","values","length","task","place","TodoList","e","obj","setState","todoList","_this2","list","map","index","value","key","onClick","taskInfo_TaskInfo","Modal","handleChange","defineProperty","target","name","taskObj","addTask","type","onChange","closeModal","Todo","openModal","push","className","modal_Modal","emptyList_EmptyList","todoList_TodoList","App","todo_Todo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0f32643.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class EmptyList extends Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    return (\n      <p>No Task pending</p>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class TaskInfo extends Component {\n  constructor(props){\n    super(props)\n  \tthis.state = {\n  \t\topenInfo : false\n  \t}\n  }\n\n\n  render() {\n \n    return (\n      <div>\n      \t<h5>{this.props.infoObj.category}</h5>\n      \t<div>\n      \t\t{Object.values(this.props.infoObj).length ? <p>{this.props.infoObj.task} <span>{this.props.infoObj.place}</span></p> : <p>No Further Info for this Category</p>}\n      \t</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TaskInfo from './taskInfo.js'\n\nexport default class TodoList extends Component {\n  constructor(props){\n    super(props)\n  \tthis.state = {\n  \t\topenInfo : false\n  \t}\n  }\n\n  openInfo = (e, obj) => {\n  \tthis.setState({openInfo : true, infoObj: obj})\n  }\n\n  render() {\n  \tlet todoList = []\n  \ttodoList = this.props.list.map((obj,index)=>{\n  \t\treturn <li value={obj} key={index}><a onClick={(e)=>this.openInfo(e,obj)}>{obj.category}</a></li>\n  \t})\n\n    return (\n      <div>\n      \t<h4>Your Tasks</h4>\n      \t<div>\n      \t\t{todoList}\n      \t\t{this.state.openInfo ? <TaskInfo infoObj={this.state.infoObj}/> : null}\n      \t</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Modal extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \ttaskObj: {}\n    }\n  }\n\n  handleChange = (e) => {\n  \tthis.setState({[e.target.name]: e.target.value})\n  \tlet taskObj = this.state.taskObj\n  \ttaskObj[e.target.name] = e.target.value\n  \tthis.setState({taskObj})\n  }\n\n  addTask = () => {\n  \tthis.props.addTask(this.state.taskObj)\n  }\n\n  render() {\n    return (\n      <div>\n      \t\t<li>\n\t      \t\t<label>Categaory</label>\n\t      \t\t<input name=\"category\" type=\"text\" onChange={(e)=>this.handleChange(e)}/>\n      \t\t</li>\n      \t\t<li>\n\t      \t\t<label>Task</label>\n\t      \t\t<input name=\"task\" type=\"text\" onChange={(e)=>this.handleChange(e)}/>\n      \t\t</li>\n      \t\t<li>\n\t      \t\t<label>Place</label>\n\t      \t\t<input name=\"place\" type=\"text\" onChange={(e)=>this.handleChange(e)}/>\n      \t\t</li>\n      \t\t<button onClick={this.addTask}>Add</button>\n      \t\t<button onClick={this.props.closeModal}>Close</button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport EmptyList from './emptyList.js';\nimport TodoList from './todoList.js'\nimport Modal from './modal.js'\n\nexport default class Todo extends Component {\n  constructor(props){\n    super(props)\n    this.state = { openModal : false }\n    this.todoList = []\n  }\n\n  openModal = () => {\n    this.setState({openModal: true})\n  }\n\n  closeModal = () => {\n    this.setState({openModal: false})\n  }\n\n  addTask = (obj) => {\n    this.todoList.push(obj)\n    this.setState({todoList: this.todoList})\n    this.closeModal()\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <h3>Todo Application</h3>\n        <button className=\"addTask\" onClick={this.openModal}>Add Task</button>\n        {this.state.openModal ? <Modal closeModal={this.closeModal} addTask={this.addTask}/> : null}\n        {this.todoList.length === 0 ? <EmptyList /> : <TodoList list={this.state.todoList}/>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './components/todo.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}